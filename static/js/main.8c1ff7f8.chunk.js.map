{"version":3,"sources":["Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","count","App","state","handleCounterIncrease","setState","current","handleCounterDecrease","this","type","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAUeA,EARC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACC,8BACC,6BAAKA,OC2BOC,E,4MA5BdC,MAAQ,CACPF,MAAO,G,EAERG,sBAAwB,WACvB,EAAKC,UAAS,SAACC,GAAD,MAAc,CAAEL,MAAOK,EAAQL,MAAQ,O,EAEtDM,sBAAwB,WACvB,EAAKF,UAAS,SAACC,GAAD,MAAc,CAAEL,MAAOK,EAAQL,MAAQ,O,4CAEtD,WACC,IAAQA,EAAUO,KAAKL,MAAfF,MACAG,EAAiDI,KAAjDJ,sBAAuBG,EAA0BC,KAA1BD,sBAC/B,OACC,gCACC,cAAC,EAAD,CAASN,MAAOA,IAChB,gCACC,wBAAQQ,KAAK,SAASC,QAASN,EAA/B,eAGA,wBAAQK,KAAK,SAASC,QAASH,EAA/B,yB,GApBaI,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.8c1ff7f8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Counter = ({ count }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>{count}</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Counter;\r\n","import React, { Component } from 'react';\r\nimport Counter from './Counter';\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tcount: 0,\r\n\t};\r\n\thandleCounterIncrease = () => {\r\n\t\tthis.setState((current) => ({ count: current.count + 1 }));\r\n\t};\r\n\thandleCounterDecrease = () => {\r\n\t\tthis.setState((current) => ({ count: current.count - 1 }));\r\n\t};\r\n\trender() {\r\n\t\tconst { count } = this.state;\r\n\t\tconst { handleCounterIncrease, handleCounterDecrease } = this;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Counter count={count} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type=\"button\" onClick={handleCounterIncrease}>\r\n\t\t\t\t\t\t+\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button type=\"button\" onClick={handleCounterDecrease}>\r\n\t\t\t\t\t\t-\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}